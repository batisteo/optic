version: "3"

tasks:
  clean:
    desc: Removes UI's build directories
    cmds:
      - rm -rf build build-demo build-apidocs

  #
  # ci namespace
  #
  ci:setup:
    - task: :workspaces:build

  ci:build:
    deps:
      - task: demo:ci
      - task: apidocs:ci

  ci:
    - task: ci:setup
    - task: ci:build


  #
  # docker namespace
  #
  docker:build:
    desc: Package site as a Docker container
    vars:
      TAG:
        sh: echo $(../../bin/clean-docker-tag {{.TAG}})
    cmds:
      - |
        docker build . \
          -t $DOCKER_REGISTRY/{{.REPO}}:{{.TAG}} \
          --build-arg APP={{.REPO}}

  docker:push:
    vars:
      TAG:
        sh: echo $(../../bin/clean-docker-tag $TAG)
    cmds:
      - docker push $DOCKER_REGISTRY/{{.REPO}}:{{.TAG}}
      - |
        if [[ "{{.TAG}}" =~ ^release-b ]]
        then
          echo "tagging and pushing 'latest'"
          docker tag $DOCKER_REGISTRY/{{.REPO}}:{{.TAG}} $DOCKER_REGISTRY/{{.REPO}}:latest
          docker push $DOCKER_REGISTRY/{{.REPO}}:latest
        fi

  #
  # demo namespace
  #
  demo:build:
    desc: Build demo site
    cmds:
      - >
        BUILD_DIR=build-demo
        CI=false
        yarn build-demo
    sources:
      - src/**
      - package.json
      - '**.ts'
      - scripts/*demo*
    generates:
      - build-demo/**

  demo:docker:build:
    - task: demo:build
    - task: docker:build
      vars:
        REPO: demo

  demo:docker:push:
    vars:
      TAG:
        sh: echo $(../../bin/clean-docker-tag $TAG)
    cmds:
      - task: docker:push
        vars:
          REPO: demo
      - task: :docker:slack-notifier
        vars:
          TAG: "{{.TAG}}"
          REPO: demo

  demo:ci:
    desc: CI workflow
    cmds:
      - task: demo:docker:build
      - task: demo:docker:push
        vars:
          REPO: demo

  #
  # apidocs namespace
  #
  apidocs:build:
    desc: Build apidocs site
    cmds:
      - task: :workspaces:build
      - >
        BUILD_DIR=build-apidocs
        CI=false
        REACT_APP_API_URL=https://api.opticnerve.net
        yarn build-spec
    sources:
      - src/**
      - package.json
      - '**.ts'
      - scripts/*spec*
    generates:
      - build-apidocs/**

  apidocs:docker:build:
    - task: apidocs:build
    - task: docker:build
      vars:
        REPO: apidocs

  apidocs:docker:push:
    vars:
      TAG:
        sh: echo $(../../bin/clean-docker-tag $TAG)
    cmds:
      - task: docker:push
        vars:
          REPO: apidocs
      - task: :docker:slack-notifier
        vars:
          TAG: "{{.TAG}}"
          REPO: apidocs

  apidocs:ci:
    desc: CI workflow
    cmds:
      - task: apidocs:docker:build
      - task: apidocs:docker:push
        vars:
          REPO: apidocs
